// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/VRMaterialChangerPluginPrivatePCH.h"
#include "VRMaterialChanger.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1VRMaterialChanger() {}
FName VRMATERIALCHANGER_ReceiveOnApplyMaterial = FName(TEXT("ReceiveOnApplyMaterial"));
FName VRMATERIALCHANGER_ReceiveOnBeginTrigger = FName(TEXT("ReceiveOnBeginTrigger"));
FName VRMATERIALCHANGER_ReceiveOnEndTrigger = FName(TEXT("ReceiveOnEndTrigger"));
	void AMaterialChangerVisual::StaticRegisterNativesAMaterialChangerVisual()
	{
		FNativeFunctionRegistrar::RegisterFunction(AMaterialChangerVisual::StaticClass(), "ApplyMaterialOnOwner",(Native)&AMaterialChangerVisual::execApplyMaterialOnOwner);
	}
	IMPLEMENT_CLASS(AMaterialChangerVisual, 4111128530);
class UScriptStruct* FMaterialToChangeData::StaticStruct()
{
	extern VRMATERIALCHANGER_API class UPackage* Z_Construct_UPackage__Script_VRMaterialChanger();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern VRMATERIALCHANGER_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialToChangeData();
		extern VRMATERIALCHANGER_API uint32 Get_Z_Construct_UScriptStruct_FMaterialToChangeData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMaterialToChangeData, Z_Construct_UPackage__Script_VRMaterialChanger(), TEXT("MaterialToChangeData"), sizeof(FMaterialToChangeData), Get_Z_Construct_UScriptStruct_FMaterialToChangeData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMaterialToChangeData(FMaterialToChangeData::StaticStruct, TEXT("/Script/VRMaterialChanger"), TEXT("MaterialToChangeData"), false, nullptr, nullptr);
static struct FScriptStruct_VRMaterialChanger_StaticRegisterNativesFMaterialToChangeData
{
	FScriptStruct_VRMaterialChanger_StaticRegisterNativesFMaterialToChangeData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MaterialToChangeData")),new UScriptStruct::TCppStructOps<FMaterialToChangeData>);
	}
} ScriptStruct_VRMaterialChanger_StaticRegisterNativesFMaterialToChangeData;
	void AMaterialChanger::StaticRegisterNativesAMaterialChanger()
	{
		FNativeFunctionRegistrar::RegisterFunction(AMaterialChanger::StaticClass(), "ChangeOwnerMaterialWithMaterial",(Native)&AMaterialChanger::execChangeOwnerMaterialWithMaterial);
	}
	IMPLEMENT_CLASS(AMaterialChanger, 2497015783);
	void UMaterialChangerComponent::StaticRegisterNativesUMaterialChangerComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UMaterialChangerComponent::StaticClass(), "ChangeOwnerMaterialWithMaterial",(Native)&UMaterialChangerComponent::execChangeOwnerMaterialWithMaterial);
	}
	IMPLEMENT_CLASS(UMaterialChangerComponent, 2190870715);
	void UMotionControllerTriggerComponent::ReceiveOnApplyMaterial(AMaterialChangerVisual* OtherVisual)
	{
		MotionControllerTriggerComponent_eventReceiveOnApplyMaterial_Parms Parms;
		Parms.OtherVisual=OtherVisual;
		ProcessEvent(FindFunctionChecked(VRMATERIALCHANGER_ReceiveOnApplyMaterial),&Parms);
	}
	void UMotionControllerTriggerComponent::ReceiveOnBeginTrigger()
	{
		ProcessEvent(FindFunctionChecked(VRMATERIALCHANGER_ReceiveOnBeginTrigger),NULL);
	}
	void UMotionControllerTriggerComponent::ReceiveOnEndTrigger()
	{
		ProcessEvent(FindFunctionChecked(VRMATERIALCHANGER_ReceiveOnEndTrigger),NULL);
	}
	void UMotionControllerTriggerComponent::StaticRegisterNativesUMotionControllerTriggerComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UMotionControllerTriggerComponent::StaticClass(), "OnControllerBeginOverlap",(Native)&UMotionControllerTriggerComponent::execOnControllerBeginOverlap);
		FNativeFunctionRegistrar::RegisterFunction(UMotionControllerTriggerComponent::StaticClass(), "OnControllerEndOverlap",(Native)&UMotionControllerTriggerComponent::execOnControllerEndOverlap);
		FNativeFunctionRegistrar::RegisterFunction(UMotionControllerTriggerComponent::StaticClass(), "PlayForceFeedback",(Native)&UMotionControllerTriggerComponent::execPlayForceFeedback);
		FNativeFunctionRegistrar::RegisterFunction(UMotionControllerTriggerComponent::StaticClass(), "ReceiveOnApplyMaterial",(Native)&UMotionControllerTriggerComponent::execReceiveOnApplyMaterial);
		FNativeFunctionRegistrar::RegisterFunction(UMotionControllerTriggerComponent::StaticClass(), "ReceiveOnBeginTrigger",(Native)&UMotionControllerTriggerComponent::execReceiveOnBeginTrigger);
		FNativeFunctionRegistrar::RegisterFunction(UMotionControllerTriggerComponent::StaticClass(), "ReceiveOnEndTrigger",(Native)&UMotionControllerTriggerComponent::execReceiveOnEndTrigger);
	}
	IMPLEMENT_CLASS(UMotionControllerTriggerComponent, 632718189);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialInterface_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UActorComponent();

	VRMATERIALCHANGER_API class UFunction* Z_Construct_UFunction_AMaterialChangerVisual_ApplyMaterialOnOwner();
	VRMATERIALCHANGER_API class UClass* Z_Construct_UClass_AMaterialChangerVisual_NoRegister();
	VRMATERIALCHANGER_API class UClass* Z_Construct_UClass_AMaterialChangerVisual();
	VRMATERIALCHANGER_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialToChangeData();
	VRMATERIALCHANGER_API class UFunction* Z_Construct_UFunction_AMaterialChanger_ChangeOwnerMaterialWithMaterial();
	VRMATERIALCHANGER_API class UClass* Z_Construct_UClass_AMaterialChanger_NoRegister();
	VRMATERIALCHANGER_API class UClass* Z_Construct_UClass_AMaterialChanger();
	VRMATERIALCHANGER_API class UFunction* Z_Construct_UFunction_UMaterialChangerComponent_ChangeOwnerMaterialWithMaterial();
	VRMATERIALCHANGER_API class UClass* Z_Construct_UClass_UMaterialChangerComponent_NoRegister();
	VRMATERIALCHANGER_API class UClass* Z_Construct_UClass_UMaterialChangerComponent();
	VRMATERIALCHANGER_API class UFunction* Z_Construct_UFunction_UMotionControllerTriggerComponent_OnControllerBeginOverlap();
	VRMATERIALCHANGER_API class UFunction* Z_Construct_UFunction_UMotionControllerTriggerComponent_OnControllerEndOverlap();
	VRMATERIALCHANGER_API class UFunction* Z_Construct_UFunction_UMotionControllerTriggerComponent_PlayForceFeedback();
	VRMATERIALCHANGER_API class UFunction* Z_Construct_UFunction_UMotionControllerTriggerComponent_ReceiveOnApplyMaterial();
	VRMATERIALCHANGER_API class UFunction* Z_Construct_UFunction_UMotionControllerTriggerComponent_ReceiveOnBeginTrigger();
	VRMATERIALCHANGER_API class UFunction* Z_Construct_UFunction_UMotionControllerTriggerComponent_ReceiveOnEndTrigger();
	VRMATERIALCHANGER_API class UClass* Z_Construct_UClass_UMotionControllerTriggerComponent_NoRegister();
	VRMATERIALCHANGER_API class UClass* Z_Construct_UClass_UMotionControllerTriggerComponent();
	VRMATERIALCHANGER_API class UPackage* Z_Construct_UPackage__Script_VRMaterialChanger();
	UFunction* Z_Construct_UFunction_AMaterialChangerVisual_ApplyMaterialOnOwner()
	{
		UObject* Outer=Z_Construct_UClass_AMaterialChangerVisual();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ApplyMaterialOnOwner"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Changer"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChangerVisual.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AMaterialChangerVisual_NoRegister()
	{
		return AMaterialChangerVisual::StaticClass();
	}
	UClass* Z_Construct_UClass_AMaterialChangerVisual()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_VRMaterialChanger();
			OuterClass = AMaterialChangerVisual::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_AMaterialChangerVisual_ApplyMaterialOnOwner());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MaterialDataIDX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaterialDataIDX"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MaterialDataIDX, AMaterialChangerVisual), 0x0010000000000014);
				UProperty* NewProp_ChangerVisual = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ChangerVisual"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ChangerVisual, AMaterialChangerVisual), 0x001000000008000d, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
				UProperty* NewProp_MaterialChangerComponentOwner = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaterialChangerComponentOwner"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MaterialChangerComponentOwner, AMaterialChangerVisual), 0x001000000008000c, Z_Construct_UClass_UMaterialChangerComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMaterialChangerVisual_ApplyMaterialOnOwner(), "ApplyMaterialOnOwner"); // 3231307339
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MaterialChangerVisual.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChangerVisual.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(NewProp_MaterialDataIDX, TEXT("Category"), TEXT("Changer"));
				MetaData->SetValue(NewProp_MaterialDataIDX, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChangerVisual.h"));
				MetaData->SetValue(NewProp_ChangerVisual, TEXT("Category"), TEXT("Changer"));
				MetaData->SetValue(NewProp_ChangerVisual, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_ChangerVisual, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChangerVisual.h"));
				MetaData->SetValue(NewProp_MaterialChangerComponentOwner, TEXT("Category"), TEXT("Changer"));
				MetaData->SetValue(NewProp_MaterialChangerComponentOwner, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_MaterialChangerComponentOwner, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChangerVisual.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMaterialChangerVisual(Z_Construct_UClass_AMaterialChangerVisual, &AMaterialChangerVisual::StaticClass, TEXT("AMaterialChangerVisual"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AMaterialChangerVisual);
	UScriptStruct* Z_Construct_UScriptStruct_FMaterialToChangeData()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_VRMaterialChanger();
		extern uint32 Get_Z_Construct_UScriptStruct_FMaterialToChangeData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MaterialToChangeData"), sizeof(FMaterialToChangeData), Get_Z_Construct_UScriptStruct_FMaterialToChangeData_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MaterialToChangeData"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMaterialToChangeData>, EStructFlags(0x00000001));
			UProperty* NewProp_MaterialElementIndex = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MaterialElementIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MaterialElementIndex, FMaterialToChangeData), 0x0010000000000005);
			UProperty* NewProp_MaterialInterface = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MaterialInterface"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MaterialInterface, FMaterialToChangeData), 0x0010000000000005, Z_Construct_UClass_UMaterialInterface_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("IsBlueprintBase"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChanger.h"));
			MetaData->SetValue(NewProp_MaterialElementIndex, TEXT("Category"), TEXT("MaterialToChangeData"));
			MetaData->SetValue(NewProp_MaterialElementIndex, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChanger.h"));
			MetaData->SetValue(NewProp_MaterialInterface, TEXT("Category"), TEXT("MaterialToChangeData"));
			MetaData->SetValue(NewProp_MaterialInterface, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChanger.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMaterialToChangeData_CRC() { return 4071990569U; }
	UFunction* Z_Construct_UFunction_AMaterialChanger_ChangeOwnerMaterialWithMaterial()
	{
		struct MaterialChanger_eventChangeOwnerMaterialWithMaterial_Parms
		{
			int32 MaterialDataIDX;
		};
		UObject* Outer=Z_Construct_UClass_AMaterialChanger();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ChangeOwnerMaterialWithMaterial"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(MaterialChanger_eventChangeOwnerMaterialWithMaterial_Parms));
			UProperty* NewProp_MaterialDataIDX = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MaterialDataIDX"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(MaterialDataIDX, MaterialChanger_eventChangeOwnerMaterialWithMaterial_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Changer"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChanger.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Apply the material with the MaterialDataIDX in the Materials array"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AMaterialChanger_NoRegister()
	{
		return AMaterialChanger::StaticClass();
	}
	UClass* Z_Construct_UClass_AMaterialChanger()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_VRMaterialChanger();
			OuterClass = AMaterialChanger::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_AMaterialChanger_ChangeOwnerMaterialWithMaterial());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MaterialVisualScale = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaterialVisualScale"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(MaterialVisualScale, AMaterialChanger), 0x0010000000000005, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_SideMultiplier = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SideMultiplier"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SideMultiplier, AMaterialChanger), 0x0010000000000005);
				UProperty* NewProp_UpMultiplier = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UpMultiplier"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(UpMultiplier, AMaterialChanger), 0x0010000000000005);
				UProperty* NewProp_MaterialVisual = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaterialVisual"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(MaterialVisual, AMaterialChanger), 0x0014000000000005, Z_Construct_UClass_AMaterialChangerVisual_NoRegister(), UClass::StaticClass());
				UProperty* NewProp_Target = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Target"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Target, AMaterialChanger), 0x0010000000000805, Z_Construct_UClass_AActor_NoRegister());
				UProperty* NewProp_Materials = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Materials"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Materials, AMaterialChanger), 0x0010000000000805);
				UProperty* NewProp_Materials_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Materials, TEXT("Materials"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FMaterialToChangeData());
				UProperty* NewProp_StartMaterialIDX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StartMaterialIDX"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(StartMaterialIDX, AMaterialChanger), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMaterialChanger_ChangeOwnerMaterialWithMaterial(), "ChangeOwnerMaterialWithMaterial"); // 3108765757
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MaterialChanger.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChanger.h"));
				MetaData->SetValue(NewProp_MaterialVisualScale, TEXT("Category"), TEXT("Changer Visualization"));
				MetaData->SetValue(NewProp_MaterialVisualScale, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChanger.h"));
				MetaData->SetValue(NewProp_MaterialVisualScale, TEXT("ToolTip"), TEXT("The scale of the material visuals to spawn in the world"));
				MetaData->SetValue(NewProp_SideMultiplier, TEXT("Category"), TEXT("Changer Visualization"));
				MetaData->SetValue(NewProp_SideMultiplier, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChanger.h"));
				MetaData->SetValue(NewProp_SideMultiplier, TEXT("ToolTip"), TEXT("The number to multiply to the right vector to find the visuals distances from the center of the material changer"));
				MetaData->SetValue(NewProp_UpMultiplier, TEXT("Category"), TEXT("Changer Visualization"));
				MetaData->SetValue(NewProp_UpMultiplier, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChanger.h"));
				MetaData->SetValue(NewProp_UpMultiplier, TEXT("ToolTip"), TEXT("The number to multiply to the up vector to find the visuals distances from the center of the material changer"));
				MetaData->SetValue(NewProp_MaterialVisual, TEXT("Category"), TEXT("Changer"));
				MetaData->SetValue(NewProp_MaterialVisual, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChanger.h"));
				MetaData->SetValue(NewProp_MaterialVisual, TEXT("ToolTip"), TEXT("The visualizer to use to show the materials in the Materials array"));
				MetaData->SetValue(NewProp_Target, TEXT("Category"), TEXT("Changer"));
				MetaData->SetValue(NewProp_Target, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChanger.h"));
				MetaData->SetValue(NewProp_Target, TEXT("ToolTip"), TEXT("The actor with the static mesh we want to apply the materials to"));
				MetaData->SetValue(NewProp_Materials, TEXT("Category"), TEXT("Changer"));
				MetaData->SetValue(NewProp_Materials, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChanger.h"));
				MetaData->SetValue(NewProp_Materials, TEXT("ToolTip"), TEXT("All the material interfaces to apply to a mesh"));
				MetaData->SetValue(NewProp_StartMaterialIDX, TEXT("Category"), TEXT("Changer"));
				MetaData->SetValue(NewProp_StartMaterialIDX, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChanger.h"));
				MetaData->SetValue(NewProp_StartMaterialIDX, TEXT("ToolTip"), TEXT("The material index in the Materials array to apply to the mesh in begin play"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMaterialChanger(Z_Construct_UClass_AMaterialChanger, &AMaterialChanger::StaticClass, TEXT("AMaterialChanger"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AMaterialChanger);
	UFunction* Z_Construct_UFunction_UMaterialChangerComponent_ChangeOwnerMaterialWithMaterial()
	{
		struct MaterialChangerComponent_eventChangeOwnerMaterialWithMaterial_Parms
		{
			int32 MaterialDataIDX;
		};
		UObject* Outer=Z_Construct_UClass_UMaterialChangerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ChangeOwnerMaterialWithMaterial"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(MaterialChangerComponent_eventChangeOwnerMaterialWithMaterial_Parms));
			UProperty* NewProp_MaterialDataIDX = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MaterialDataIDX"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(MaterialDataIDX, MaterialChangerComponent_eventChangeOwnerMaterialWithMaterial_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Changer"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChangerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Apply the material with the MaterialDataIDX in the Materials array"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UMaterialChangerComponent_NoRegister()
	{
		return UMaterialChangerComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UMaterialChangerComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_VRMaterialChanger();
			OuterClass = UMaterialChangerComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;

				OuterClass->LinkChild(Z_Construct_UFunction_UMaterialChangerComponent_ChangeOwnerMaterialWithMaterial());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MaterialVisualScale = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaterialVisualScale"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(MaterialVisualScale, UMaterialChangerComponent), 0x0010000000000005, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_SideMultiplier = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SideMultiplier"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SideMultiplier, UMaterialChangerComponent), 0x0010000000000005);
				UProperty* NewProp_UpMultiplier = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UpMultiplier"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(UpMultiplier, UMaterialChangerComponent), 0x0010000000000005);
				UProperty* NewProp_MaterialVisual = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaterialVisual"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(MaterialVisual, UMaterialChangerComponent), 0x0014000000000005, Z_Construct_UClass_AMaterialChangerVisual_NoRegister(), UClass::StaticClass());
				UProperty* NewProp_Target = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Target"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Target, UMaterialChangerComponent), 0x0010000000000805, Z_Construct_UClass_AActor_NoRegister());
				UProperty* NewProp_Materials = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Materials"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Materials, UMaterialChangerComponent), 0x0010000000000805);
				UProperty* NewProp_Materials_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Materials, TEXT("Materials"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FMaterialToChangeData());
				UProperty* NewProp_StartMaterialIDX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StartMaterialIDX"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(StartMaterialIDX, UMaterialChangerComponent), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMaterialChangerComponent_ChangeOwnerMaterialWithMaterial(), "ChangeOwnerMaterialWithMaterial"); // 1856920141
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MaterialChangerComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChangerComponent.h"));
				MetaData->SetValue(NewProp_MaterialVisualScale, TEXT("Category"), TEXT("Changer Visualization"));
				MetaData->SetValue(NewProp_MaterialVisualScale, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChangerComponent.h"));
				MetaData->SetValue(NewProp_MaterialVisualScale, TEXT("ToolTip"), TEXT("The scale of the material visuals to spawn in the world"));
				MetaData->SetValue(NewProp_SideMultiplier, TEXT("Category"), TEXT("Changer Visualization"));
				MetaData->SetValue(NewProp_SideMultiplier, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChangerComponent.h"));
				MetaData->SetValue(NewProp_SideMultiplier, TEXT("ToolTip"), TEXT("The number to multiply to the right vector to find the visuals distances from the center of the material changer"));
				MetaData->SetValue(NewProp_UpMultiplier, TEXT("Category"), TEXT("Changer Visualization"));
				MetaData->SetValue(NewProp_UpMultiplier, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChangerComponent.h"));
				MetaData->SetValue(NewProp_UpMultiplier, TEXT("ToolTip"), TEXT("The number to multiply to the up vector to find the visuals distances from the center of the material changer"));
				MetaData->SetValue(NewProp_MaterialVisual, TEXT("Category"), TEXT("Changer"));
				MetaData->SetValue(NewProp_MaterialVisual, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChangerComponent.h"));
				MetaData->SetValue(NewProp_MaterialVisual, TEXT("ToolTip"), TEXT("The visualizer to use to show the materials in the Materials array"));
				MetaData->SetValue(NewProp_Target, TEXT("Category"), TEXT("Changer"));
				MetaData->SetValue(NewProp_Target, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChangerComponent.h"));
				MetaData->SetValue(NewProp_Target, TEXT("ToolTip"), TEXT("The actor with the static mesh we want to apply the materials to"));
				MetaData->SetValue(NewProp_Materials, TEXT("Category"), TEXT("Changer"));
				MetaData->SetValue(NewProp_Materials, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChangerComponent.h"));
				MetaData->SetValue(NewProp_Materials, TEXT("ToolTip"), TEXT("All the material interfaces to apply to a mesh"));
				MetaData->SetValue(NewProp_StartMaterialIDX, TEXT("Category"), TEXT("Changer"));
				MetaData->SetValue(NewProp_StartMaterialIDX, TEXT("ModuleRelativePath"), TEXT("Public/MaterialChangerComponent.h"));
				MetaData->SetValue(NewProp_StartMaterialIDX, TEXT("ToolTip"), TEXT("The material index in the Materials array to apply to the mesh in begin play"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMaterialChangerComponent(Z_Construct_UClass_UMaterialChangerComponent, &UMaterialChangerComponent::StaticClass, TEXT("UMaterialChangerComponent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMaterialChangerComponent);
	UFunction* Z_Construct_UFunction_UMotionControllerTriggerComponent_OnControllerBeginOverlap()
	{
		struct MotionControllerTriggerComponent_eventOnControllerBeginOverlap_Parms
		{
			AActor* OverlappedActor;
			AActor* OtherActor;
		};
		UObject* Outer=Z_Construct_UClass_UMotionControllerTriggerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnControllerBeginOverlap"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535, sizeof(MotionControllerTriggerComponent_eventOnControllerBeginOverlap_Parms));
			UProperty* NewProp_OtherActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherActor, MotionControllerTriggerComponent_eventOnControllerBeginOverlap_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_OverlappedActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OverlappedActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OverlappedActor, MotionControllerTriggerComponent_eventOnControllerBeginOverlap_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MotionControllerTriggerComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMotionControllerTriggerComponent_OnControllerEndOverlap()
	{
		struct MotionControllerTriggerComponent_eventOnControllerEndOverlap_Parms
		{
			AActor* OverlappedActor;
			AActor* OtherActor;
		};
		UObject* Outer=Z_Construct_UClass_UMotionControllerTriggerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnControllerEndOverlap"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535, sizeof(MotionControllerTriggerComponent_eventOnControllerEndOverlap_Parms));
			UProperty* NewProp_OtherActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherActor, MotionControllerTriggerComponent_eventOnControllerEndOverlap_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_OverlappedActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OverlappedActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OverlappedActor, MotionControllerTriggerComponent_eventOnControllerEndOverlap_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MotionControllerTriggerComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMotionControllerTriggerComponent_PlayForceFeedback()
	{
		UObject* Outer=Z_Construct_UClass_UMotionControllerTriggerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PlayForceFeedback"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Material Changer"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MotionControllerTriggerComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMotionControllerTriggerComponent_ReceiveOnApplyMaterial()
	{
		UObject* Outer=Z_Construct_UClass_UMotionControllerTriggerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveOnApplyMaterial"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020C00, 65535, sizeof(MotionControllerTriggerComponent_eventReceiveOnApplyMaterial_Parms));
			UProperty* NewProp_OtherVisual = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherVisual"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherVisual, MotionControllerTriggerComponent_eventReceiveOnApplyMaterial_Parms), 0x0010000000000080, Z_Construct_UClass_AMaterialChangerVisual_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Material Changer"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("OnApplyMaterial"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MotionControllerTriggerComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMotionControllerTriggerComponent_ReceiveOnBeginTrigger()
	{
		UObject* Outer=Z_Construct_UClass_UMotionControllerTriggerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveOnBeginTrigger"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020C00, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Material Changer"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("OnBeginTrigger"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MotionControllerTriggerComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMotionControllerTriggerComponent_ReceiveOnEndTrigger()
	{
		UObject* Outer=Z_Construct_UClass_UMotionControllerTriggerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveOnEndTrigger"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020C00, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Material Changer"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("OnEndTrigger"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MotionControllerTriggerComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UMotionControllerTriggerComponent_NoRegister()
	{
		return UMotionControllerTriggerComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UMotionControllerTriggerComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_VRMaterialChanger();
			OuterClass = UMotionControllerTriggerComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;

				OuterClass->LinkChild(Z_Construct_UFunction_UMotionControllerTriggerComponent_OnControllerBeginOverlap());
				OuterClass->LinkChild(Z_Construct_UFunction_UMotionControllerTriggerComponent_OnControllerEndOverlap());
				OuterClass->LinkChild(Z_Construct_UFunction_UMotionControllerTriggerComponent_PlayForceFeedback());
				OuterClass->LinkChild(Z_Construct_UFunction_UMotionControllerTriggerComponent_ReceiveOnApplyMaterial());
				OuterClass->LinkChild(Z_Construct_UFunction_UMotionControllerTriggerComponent_ReceiveOnBeginTrigger());
				OuterClass->LinkChild(Z_Construct_UFunction_UMotionControllerTriggerComponent_ReceiveOnEndTrigger());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ForceFeedbackDuration = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ForceFeedbackDuration"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ForceFeedbackDuration, UMotionControllerTriggerComponent), 0x0010000000000005);
				UProperty* NewProp_ForceFeedbackIntensity = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ForceFeedbackIntensity"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ForceFeedbackIntensity, UMotionControllerTriggerComponent), 0x0010000000000005);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(ActionConsumesInput, UMotionControllerTriggerComponent, bool);
				UProperty* NewProp_ActionConsumesInput = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActionConsumesInput"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ActionConsumesInput, UMotionControllerTriggerComponent), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(ActionConsumesInput, UMotionControllerTriggerComponent), sizeof(bool), true);
				UProperty* NewProp_RightActionName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RightActionName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(RightActionName, UMotionControllerTriggerComponent), 0x0010000000000015);
				UProperty* NewProp_LeftActionName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LeftActionName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(LeftActionName, UMotionControllerTriggerComponent), 0x0010000000000015);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(TriggerWithActionInsideCollision, UMotionControllerTriggerComponent, bool);
				UProperty* NewProp_TriggerWithActionInsideCollision = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TriggerWithActionInsideCollision"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(TriggerWithActionInsideCollision, UMotionControllerTriggerComponent), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(TriggerWithActionInsideCollision, UMotionControllerTriggerComponent), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMotionControllerTriggerComponent_OnControllerBeginOverlap(), "OnControllerBeginOverlap"); // 3939977024
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMotionControllerTriggerComponent_OnControllerEndOverlap(), "OnControllerEndOverlap"); // 3106819503
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMotionControllerTriggerComponent_PlayForceFeedback(), "PlayForceFeedback"); // 3619062315
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMotionControllerTriggerComponent_ReceiveOnApplyMaterial(), "ReceiveOnApplyMaterial"); // 3528121518
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMotionControllerTriggerComponent_ReceiveOnBeginTrigger(), "ReceiveOnBeginTrigger"); // 2792746323
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMotionControllerTriggerComponent_ReceiveOnEndTrigger(), "ReceiveOnEndTrigger"); // 1540508926
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MotionControllerTriggerComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/MotionControllerTriggerComponent.h"));
				MetaData->SetValue(NewProp_ForceFeedbackDuration, TEXT("Category"), TEXT("Input"));
				MetaData->SetValue(NewProp_ForceFeedbackDuration, TEXT("ModuleRelativePath"), TEXT("Public/MotionControllerTriggerComponent.h"));
				MetaData->SetValue(NewProp_ForceFeedbackIntensity, TEXT("Category"), TEXT("Input"));
				MetaData->SetValue(NewProp_ForceFeedbackIntensity, TEXT("ModuleRelativePath"), TEXT("Public/MotionControllerTriggerComponent.h"));
				MetaData->SetValue(NewProp_ActionConsumesInput, TEXT("Category"), TEXT("Input"));
				MetaData->SetValue(NewProp_ActionConsumesInput, TEXT("ModuleRelativePath"), TEXT("Public/MotionControllerTriggerComponent.h"));
				MetaData->SetValue(NewProp_RightActionName, TEXT("Category"), TEXT("Input"));
				MetaData->SetValue(NewProp_RightActionName, TEXT("ModuleRelativePath"), TEXT("Public/MotionControllerTriggerComponent.h"));
				MetaData->SetValue(NewProp_LeftActionName, TEXT("Category"), TEXT("Input"));
				MetaData->SetValue(NewProp_LeftActionName, TEXT("ModuleRelativePath"), TEXT("Public/MotionControllerTriggerComponent.h"));
				MetaData->SetValue(NewProp_TriggerWithActionInsideCollision, TEXT("Category"), TEXT("Input"));
				MetaData->SetValue(NewProp_TriggerWithActionInsideCollision, TEXT("ModuleRelativePath"), TEXT("Public/MotionControllerTriggerComponent.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMotionControllerTriggerComponent(Z_Construct_UClass_UMotionControllerTriggerComponent, &UMotionControllerTriggerComponent::StaticClass, TEXT("UMotionControllerTriggerComponent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMotionControllerTriggerComponent);
	UPackage* Z_Construct_UPackage__Script_VRMaterialChanger()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/VRMaterialChanger")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x0B3467E8;
			Guid.B = 0x0FE5CBEC;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
